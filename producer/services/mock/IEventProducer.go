// Code generated by mockery v2.20.0. DO NOT EDIT.

package mockService

import (
	events "events"

	mock "github.com/stretchr/testify/mock"
)

// IEventProducer is an autogenerated mock type for the IEventProducer type
type IEventProducer struct {
	mock.Mock
}

// Produce provides a mock function with given fields: event
func (_m *IEventProducer) Produce(event events.Event) error {
	ret := _m.Called(event)

	var r0 error
	if rf, ok := ret.Get(0).(func(events.Event) error); ok {
		r0 = rf(event)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewIEventProducer interface {
	mock.TestingT
	Cleanup(func())
}

// NewIEventProducer creates a new instance of IEventProducer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIEventProducer(t mockConstructorTestingTNewIEventProducer) *IEventProducer {
	mock := &IEventProducer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
